import "react"
    useRef
    useState
import "react-three-fiber"
    Canvas
    useFrame

let Box = (props) =>
    // This reference will give us direct access to the mesh
    let mesh = useRef()
    var foo = 12

    // Set up state for the hovered and active state
    let [hovered, setHover] = useState(false)
    let [active, setActive] = useState(false)

    // Rotate mesh every frame, this is outside of React without overhead
    useFrame()
        () =>
            //  TODO: += assignments
            mesh.current.rotation.y += mesh.current.rotation.y
            mesh.current.rotation.x = mesh.current.rotation.y

    return
        <mesh {...props} />
            ref: mesh
            scale: active ? [1.5, 1.5, 1.5] : [1, 1, 1]
            onClick: () => setActive(!active)
            onPointerOver: () => setHover(true)
            onPointerOut: () => setHover(false)
            <boxBufferGeometry args={[1, 1, 1]} />
            <meshStandardMaterial color={hovered ? "hotpink" : "orange"} />

export default () =>
    return
        <Canvas style={{ border: "solid 1px black", width: 500, height: 500 }} />
            <ambientLight />
            <pointLight position={[10, 10, 10]} />
            <Box position={[-1.2, 0, 0]} />
            <Box position={[1.2, 0, 0]} />
